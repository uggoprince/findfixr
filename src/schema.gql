# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AuthDTO {
  email: String!
  password: String!
}

"""Technician availability status"""
enum Availability {
  BUSY
  OFFLINE
  ONLINE
}

type Bookmark {
  createdAt: DateTime!
  id: ID!
  technicianId: String!
  userId: String!
}

type BookmarkToggleResponse {
  bookmark: Bookmark
  bookmarked: Boolean!
}

input CreateBookmarkInput {
  technicianId: String!
}

input CreateReviewInput {
  comment: String
  rating: Int!
  technicianId: String!
}

input CreateServiceCategoryInput {
  description: String
  icon: String
  name: String!
}

input CreateTechnicianInput {
  availability: Availability
  bio: String
  businessName: String
  latitude: Float
  longitude: Float
  profession: String!
}

input CreateUserInput {
  email: String!
  firstName: String!
  lastName: String!
  middleName: String
  password: String!
  phone: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LoginResponse {
  accessToken: String!
  email: String!
  firstName: String!
  id: String!
  lastName: String!
}

type Mutation {
  """Add a technician to bookmarks"""
  createBookmark(input: CreateBookmarkInput!): Bookmark!
  createReview(input: CreateReviewInput!): Review!
  createServiceCategory(input: CreateServiceCategoryInput!): ServiceCategory!
  createTechnician(input: CreateTechnicianInput!): Technician!

  """Remove a bookmark by ID"""
  deleteBookmark(id: String!): Bookmark!

  """Remove a bookmark by technician ID"""
  deleteBookmarkByTechnician(technicianId: String!): Bookmark!
  deleteReview(id: String!): Review!
  deleteServiceCategory(id: String!): ServiceCategory!
  login(credentials: AuthDTO!): LoginResponse!
  register(input: CreateUserInput!): User!

  """Toggle bookmark status for a technician"""
  toggleBookmark(technicianId: String!): BookmarkToggleResponse!
  updateReview(id: String!, input: UpdateReviewInput!): Review!
  updateServiceCategory(id: String!, input: UpdateServiceCategoryInput!): ServiceCategory!
  updateTechnician(input: UpdateTechnicianInput!): Technician!
  updateTechnicianLocation(lat: Float!, lng: Float!): Technician!
}

type PaginatedBookmarks {
  hasNextPage: Boolean!
  items: [Bookmark!]!
  nextCursor: String
  nextSkip: Int
  totalCount: Int!
}

type PaginatedReviews {
  hasNextPage: Boolean!
  items: [Review!]!
  nextCursor: String
  nextSkip: Int
  totalCount: Int!
}

type PaginatedServiceCategories {
  hasNextPage: Boolean!
  items: [ServiceCategory!]!
  nextCursor: String
  nextSkip: Int
  totalCount: Int!
}

type PaginatedTechnicians {
  hasNextPage: Boolean!
  items: [Technician!]!
  nextCursor: String
  nextSkip: Int
  totalCount: Int!
}

type PaginatedUsers {
  hasNextPage: Boolean!
  items: [User!]!
  nextCursor: String
  nextSkip: Int
  totalCount: Int!
}

type Query {
  averageRating(technicianId: String!): Float!

  """Get a specific bookmark by ID"""
  bookmark(id: String!): Bookmark
  getUser(id: String!): User
  getUsers(filter: String, page: Int, pageSize: Int): PaginatedUsers!
  getUsersCursor(cursor: String, filter: String, take: Int): PaginatedUsers!

  """Check if a technician is bookmarked by the current user"""
  isBookmarked(technicianId: String!): Boolean!

  """Get list of all bookmarked technician IDs"""
  myBookmarkedTechnicianIds: [String!]!

  """Get all bookmarks for the current user"""
  myBookmarks(page: Int = 1, pageSize: Int = 10): PaginatedBookmarks!

  """Get bookmarks with cursor-based pagination"""
  myBookmarksCursor(cursor: String, take: Int = 10): PaginatedBookmarks!
  myReviews(page: Int, pageSize: Int): [Review!]!
  review(id: String!): Review
  reviews(filter: String, page: Int, pageSize: Int): PaginatedReviews!
  reviewsByTechnician(page: Int, pageSize: Int, technicianId: String!): [Review!]!
  serviceCategories(filter: String, page: Int, pageSize: Int): PaginatedServiceCategories!
  serviceCategory(id: String!): ServiceCategory
  technician(id: String!): Technician
  technicians(filter: String, page: Int, pageSize: Int): PaginatedTechnicians!

  """Get total number of bookmarks for a technician"""
  totalBookmarks(technicianId: String!): Int!
  totalReviews(technicianId: String!): Int!

  """Get users who bookmarked a specific technician"""
  usersWhoBookmarked(page: Int = 1, pageSize: Int = 10, technicianId: String!): [Bookmark!]!
}

type Review {
  comment: String
  createdAt: DateTime!
  id: ID!
  rating: Int!
  technicianId: String!
  updatedAt: DateTime!
  userId: String
}

type ServiceCategory {
  createdAt: DateTime!
  description: String
  icon: String
  id: ID!
  name: String!
  updatedAt: DateTime!
}

type Technician {
  availability: String
  bio: String
  businessName: String
  createdAt: DateTime!
  id: ID!
  profession: String!
  profilePicture: String
  updatedAt: DateTime!
  userId: String!
  yearsExperience: String
}

input UpdateReviewInput {
  comment: String
  rating: Int
}

input UpdateServiceCategoryInput {
  description: String
  icon: String
  name: String
}

input UpdateTechnicianInput {
  availability: Availability
  bio: String
  businessName: String
  profession: String
  profilePicture: Availability
  yearsExperience: Int
}

type User {
  createdAt: DateTime!
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  middleName: String
  phone: String
  updatedAt: DateTime!
}